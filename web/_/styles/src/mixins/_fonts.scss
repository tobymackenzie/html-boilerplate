/*
Mixin: fontSize
Set 'font-size' property in rem with pixel fallback.  Passed in value is pixel equivalent unitless number.  If passed in value isn't unitless, it is output directly, allowing uniform interface to 'font-size'.

-@ based on http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
*/
@mixin fontSize($sizeValue){
	@if unitless($sizeValue){
		@include remFallback('font-size', $sizeValue);
	}@else{
		font-size: $sizeValue;
	}
}

/*
Function: getFont

Convenience function for getting a font value from the '$fonts' map.
*/

$fonts: () !default;

@function getFont($name){
	@return map-get($fonts, $name);
}

/*
Function: getFontSize

Convenience function for getting a font size value from the '$fontSizes' map.
*/

$fontSizes: () !default;

@function getFontSize($name){
	@return map-get($fontSizes, $name);
}

/*
Function: getFontStack

Convenience function for getting a font stack value from the '$fontStacks' map.
*/

$fontStacks: () !default;

@function getFontStack($name){
	@return map-get($fontStacks, $name);
}
